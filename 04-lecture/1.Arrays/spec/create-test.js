"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTest = void 0;
function createTest(Array) {
    function test(lines) {
        const [source, method = "add", param1, param2] = lines;
        const arr = new Array();
        const sourceArr = source.split(",");
        for (let i = 0; i < sourceArr.length; i++) {
            arr.add(parseInt(sourceArr[i], 10));
        }
        if (method === "add") {
            const index = param2
                ? parseInt(param2, 10) : undefined;
            arr.add(parseInt(param1, 10), index);
        }
        if (method === "remove") {
            arr.remove(parseInt(param1, 10));
        }
        return arr.toString();
    }
    test.title = "";
    return test;
}
exports.createTest = createTest;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjcmVhdGUtdGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxTQUFnQixVQUFVLENBQUMsS0FBMEI7SUFDbkQsU0FBUyxJQUFJLENBQUMsS0FBZTtRQUMzQixNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sR0FBRyxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUN2RCxNQUFNLEdBQUcsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1FBQ3hCLE1BQU0sU0FBUyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFcEMsS0FBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDeEMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDckM7UUFDRCxJQUFJLE1BQU0sS0FBSyxLQUFLLEVBQUU7WUFDcEIsTUFBTSxLQUFLLEdBQUcsTUFBTTtnQkFDbEIsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztZQUVyQyxHQUFHLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUE7U0FDckM7UUFDRCxJQUFJLE1BQU0sS0FBSyxRQUFRLEVBQUU7WUFDdkIsR0FBRyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUE7U0FDakM7UUFDRCxPQUFPLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7SUFFaEIsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBeEJELGdDQXdCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElBcnJheUNvbnN0cnVjdGFibGUgfSBmcm9tIFwiLi4vSUFycmF5XCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUZXN0KEFycmF5OiBJQXJyYXlDb25zdHJ1Y3RhYmxlKSB7XG4gIGZ1bmN0aW9uIHRlc3QobGluZXM6IHN0cmluZ1tdKSB7XG4gICAgY29uc3QgW3NvdXJjZSwgbWV0aG9kID0gXCJhZGRcIiwgcGFyYW0xLCBwYXJhbTJdID0gbGluZXM7XG4gICAgY29uc3QgYXJyID0gbmV3IEFycmF5KCk7XG4gICAgY29uc3Qgc291cmNlQXJyID0gc291cmNlLnNwbGl0KFwiLFwiKTtcblxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBzb3VyY2VBcnIubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyci5hZGQocGFyc2VJbnQoc291cmNlQXJyW2ldLCAxMCkpO1xuICAgIH1cbiAgICBpZiAobWV0aG9kID09PSBcImFkZFwiKSB7XG4gICAgICBjb25zdCBpbmRleCA9IHBhcmFtMlxuICAgICAgICA/IHBhcnNlSW50KHBhcmFtMiwgMTApIDogdW5kZWZpbmVkO1xuXG4gICAgICBhcnIuYWRkKHBhcnNlSW50KHBhcmFtMSwgMTApLCBpbmRleClcbiAgICB9XG4gICAgaWYgKG1ldGhvZCA9PT0gXCJyZW1vdmVcIikge1xuICAgICAgYXJyLnJlbW92ZShwYXJzZUludChwYXJhbTEsIDEwKSlcbiAgICB9XG4gICAgcmV0dXJuIGFyci50b1N0cmluZygpO1xuICB9XG5cbiAgdGVzdC50aXRsZSA9IFwiXCI7XG5cbiAgcmV0dXJuIHRlc3Q7XG59XG4iXX0=