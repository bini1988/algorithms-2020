"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VectorArray = void 0;
class VectorArray {
    constructor(vector = 10) {
        this.vector = vector;
        this.size = 0;
        this.arr = new Array(this.size);
    }
    get isEmpty() {
        return this.size === 0;
    }
    add(item, index = this.size) {
        let position = Math.min(index, this.size);
        let target = this.arr;
        let i = position;
        if (this.size === this.arr.length) {
            target = new Array(this.size + this.vector);
            i = 0;
            while (i < position) {
                target[i] = this.arr[i++];
            }
        }
        target[i++] = item;
        for (; i < this.size + 1; i++) {
            target[i] = this.arr[i - 1];
        }
        this.arr = target;
        this.size++;
    }
    remove(index) {
        let position = Math.min(index, this.size);
        let item = this.arr[index];
        for (let i = position; i < this.size - 1; i++) {
            this.arr[i] = this.arr[i + 1];
        }
        this.size--;
        return item;
    }
    toString() {
        return this.arr.slice(0, this.size).join(",");
    }
}
exports.VectorArray = VectorArray;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmVjdG9yQXJyYXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJWZWN0b3JBcnJheS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxNQUFhLFdBQVc7SUFLdEIsWUFBbUIsU0FBaUIsRUFBRTtRQUNwQyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztRQUNkLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxLQUFLLENBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxJQUFXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRU0sR0FBRyxDQUFDLElBQU8sRUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUk7UUFDbkMsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFDLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7UUFDdEIsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDO1FBRWpCLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRTtZQUNqQyxNQUFNLEdBQUcsSUFBSSxLQUFLLENBQUksSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDL0MsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUVOLE9BQU8sQ0FBQyxHQUFHLFFBQVEsRUFBRTtnQkFDbkIsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUMzQjtTQUNGO1FBRUQsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBRW5CLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdCLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTtTQUM1QjtRQUVELElBQUksQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNkLENBQUM7SUFFTSxNQUFNLENBQUMsS0FBYTtRQUN6QixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDMUMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUUzQixLQUFLLElBQUksQ0FBQyxHQUFHLFFBQVEsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0MsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMvQjtRQUNELElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUVaLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLFFBQVE7UUFDYixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2hELENBQUM7Q0FDRjtBQXRERCxrQ0FzREMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBjbGFzcyBWZWN0b3JBcnJheTxUPiB7XG4gIHByaXZhdGUgYXJyOiBUW107XG4gIHByaXZhdGUgdmVjdG9yOiBudW1iZXI7XG4gIHB1YmxpYyBzaXplOiBudW1iZXI7XG5cbiAgcHVibGljIGNvbnN0cnVjdG9yKHZlY3RvcjogbnVtYmVyID0gMTApIHtcbiAgICB0aGlzLnZlY3RvciA9IHZlY3RvcjtcbiAgICB0aGlzLnNpemUgPSAwO1xuICAgIHRoaXMuYXJyID0gbmV3IEFycmF5PFQ+KHRoaXMuc2l6ZSk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGlzRW1wdHkoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2l6ZSA9PT0gMDtcbiAgfVxuXG4gIHB1YmxpYyBhZGQoaXRlbTogVCwgaW5kZXggPSB0aGlzLnNpemUpOiB2b2lkIHtcbiAgICBsZXQgcG9zaXRpb24gPSBNYXRoLm1pbihpbmRleCwgdGhpcy5zaXplKTtcbiAgICBsZXQgdGFyZ2V0ID0gdGhpcy5hcnI7XG4gICAgbGV0IGkgPSBwb3NpdGlvbjtcblxuICAgIGlmICh0aGlzLnNpemUgPT09IHRoaXMuYXJyLmxlbmd0aCkge1xuICAgICAgdGFyZ2V0ID0gbmV3IEFycmF5PFQ+KHRoaXMuc2l6ZSArIHRoaXMudmVjdG9yKTtcbiAgICAgIGkgPSAwO1xuXG4gICAgICB3aGlsZSAoaSA8IHBvc2l0aW9uKSB7XG4gICAgICAgIHRhcmdldFtpXSA9IHRoaXMuYXJyW2krK107XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGFyZ2V0W2krK10gPSBpdGVtO1xuXG4gICAgZm9yICg7IGkgPCB0aGlzLnNpemUgKyAxOyBpKyspIHtcbiAgICAgIHRhcmdldFtpXSA9IHRoaXMuYXJyW2kgLSAxXVxuICAgIH1cblxuICAgIHRoaXMuYXJyID0gdGFyZ2V0O1xuICAgIHRoaXMuc2l6ZSsrO1xuICB9XG5cbiAgcHVibGljIHJlbW92ZShpbmRleDogbnVtYmVyKTogVCB7XG4gICAgbGV0IHBvc2l0aW9uID0gTWF0aC5taW4oaW5kZXgsIHRoaXMuc2l6ZSk7XG4gICAgbGV0IGl0ZW0gPSB0aGlzLmFycltpbmRleF07XG5cbiAgICBmb3IgKGxldCBpID0gcG9zaXRpb247IGkgPCB0aGlzLnNpemUgLSAxOyBpKyspIHtcbiAgICAgIHRoaXMuYXJyW2ldID0gdGhpcy5hcnJbaSArIDFdO1xuICAgIH1cbiAgICB0aGlzLnNpemUtLTtcblxuICAgIHJldHVybiBpdGVtO1xuICB9XG5cbiAgcHVibGljIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLmFyci5zbGljZSgwLCB0aGlzLnNpemUpLmpvaW4oXCIsXCIpO1xuICB9XG59XG4iXX0=